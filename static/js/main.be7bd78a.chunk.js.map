{"version":3,"sources":["SchemaViewerPage/SchemaViewerPage.js","App.js","reportWebVitals.js","index.js"],"names":["SchemaViewerPage","useState","input","setInput","schema","setSchema","className","onSubmit","event","preventDefault","JSON","parse","htmlFor","id","value","onChange","target","type","name","expanded","hideTopBar","emptyText","defaultExpandedDepth","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RA0CeA,EAtCU,WAAO,IAAD,EACHC,mBAAS,IADN,mBACtBC,EADsB,KACfC,EADe,OAEDF,mBAAS,IAFR,mBAEtBG,EAFsB,KAEdC,EAFc,KAS7B,OACE,sBAAKC,UAAU,qBAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,uBAAMC,SARS,SAACC,GACpBA,EAAMC,iBACNJ,EAAUK,KAAKC,MAAMT,KAMjB,UACE,uBAAOU,QAAQ,cAAf,yBACA,0BACEN,UAAU,eACVO,GAAG,cACHC,MAAOZ,EACPa,SAAU,SAACP,GAAD,OAAWL,EAASK,EAAMQ,OAAOF,UAE7C,uBAAOR,UAAU,iBAAiBW,KAAK,SAASH,MAAM,gBAI1D,qBAAKR,UAAU,oBAAf,SACE,cAAC,IAAD,CACEY,KAAK,cACLd,OAAQA,EACRe,UAAU,EACVC,YAAY,EACZC,UAAU,oBACVC,qBAAsB,UC1BjBC,EANH,kBACV,qBAAKjB,UAAU,wBAAf,SACE,cAAC,EAAD,OCOWkB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.be7bd78a.chunk.js","sourcesContent":["import { JsonSchemaViewer } from '@stoplight/json-schema-viewer'\nimport './SchemaViewerPage.scss'\nimport { useState } from 'react'\n\nconst SchemaViewerPage = () => {\n  const [input, setInput] = useState('')\n  const [schema, setSchema] = useState({})\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    setSchema(JSON.parse(input))\n  }\n\n  return (\n    <div className=\"schema-viewer-page\">\n      <div className=\"six columns panel\">\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"schemaInput\">JSON Schema</label>\n          <textarea\n            className=\"u-full-width\"\n            id=\"schemaInput\"\n            value={input}\n            onChange={(event) => setInput(event.target.value)}\n          />\n          <input className=\"button-primary\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n\n      <div className=\"six columns panel\">\n        <JsonSchemaViewer\n          name=\"JSON Schema\"\n          schema={schema}\n          expanded={true}\n          hideTopBar={false}\n          emptyText=\"No schema defined\"\n          defaultExpandedDepth={0}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default SchemaViewerPage\n","import './App.scss'\nimport SchemaViewerPage from './SchemaViewerPage'\n\nconst App = () => (\n  <div className=\"application-container\">\n    <SchemaViewerPage />\n  </div>\n)\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}